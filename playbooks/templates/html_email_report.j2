<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>System Configuration Report</title>
    <style>
        /* Existing styles */
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .success { color: green; }
        .no-change { color: orange; }
        .failure { color: red; }
        .OK {
            color: green;
        }
        
        .Changed {
            color: orange;
        }
        
        .Failed {
            color: red;
        }
        /* Style to remove bullet points */
        .domain-list { 
            list-style-type: none; /* Remove bullet points */
            padding: 0; /* Remove padding */
            margin: 0; /* Remove margins */
        }
        .domain-list li {
            line-height: 1.6; /* Adjust line height for readability */
        }
    </style>

</head>
<body>
    <h1>System Configuration Report for {{ new_hostname | upper }}</h1>
    <p>Date of Report: {{ ansible_date_time.iso8601 }}</p>
    <table>
        <tr>
            <th>Property</th>
            <th>Value</th>
        </tr>
        <tr>
            <td>Operating System</td>
            <td colspan="3">{{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_version'] }}</td>
        </tr>
        <tr>
            <td>IP Address</td>
            <td>{{ nmcli_output.details.ip_address }}</td>
        </tr>
        {% if nmcli_output.details.subnet is defined %}
        <tr>
            <td>Subnet</td>
            <td>{{ nmcli_output.details.subnet }}</td>
        </tr>
        {% endif %}
        <tr>
            <td>Gateway</td>
            <td>{{ nmcli_output.details.gateway }}</td>
        </tr>
        {% if nmcli_output.details.dns_servers %}
        <tr>
            <td>DNS Servers</td>
            <td>
                {% for dns_server in nmcli_output.details.dns_servers %}
                {{ dns_server }}<br>
                {% endfor %}
            </td>
        </tr>
        {% endif %}
    </table>

    <table>
        <tr>
            <th>Task</th>
            <th>Sub Task</th>
            <th>Status</th>
            <th>Details</th>
        </tr>
        <tr>
            <td>Hostname Change</td>
            <td>N/A</td>
            <td class="{{ 'Changed' if hostname_change_output.changed else 'OK' }}">
                {{ 'Changed' if hostname_change_output.changed else 'OK' }}
            </td>
            <td>
                {{ 'Hostname updated successfully.' if hostname_change_output.changed else 'Hostname change not required or already set correctly.' }}
            </td>
        </tr>
        <tr>
            <td rowspan="2">Sudoers Update</td>
            <td>Groups</td>
            <td class="{{ 'Changed' if (sudo_groups_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}">
                {{ 'Changed' if (sudo_groups_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}
            </td>
            <td>
                {% for result in sudo_groups_result.results %}
                {{ result.item }}<br>
                {% endfor %}
            </td>
        </tr>
        <tr>
            <td>Users</td>
            <td class="{{ 'Changed' if (sudo_users_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}">
                {{ 'Changed' if (sudo_users_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}
            </td>
            <td>
                {% for result in sudo_users_result.results %}
                {{ result.item }}<br>
                {% endfor %}
            </td>
        </tr>

        <tr>
            <td rowspan="2">Access Configuration Update</td>
            <td>Groups</td>
            <td class="{{ 'Failed' if access_groups_failed else 'Changed' if (access_groups_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}">
                {{ 'Failed' if access_groups_failed else 'Changed' if (access_groups_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}
            </td>
            <td>
                {% for result in access_groups_result.results %}
                {{ result.item }}<br>
                {% endfor %}
            </td>
        </tr>
        <tr>
            <td>Users</td>
            <td class="{{ 'Failed' if access_users_failed else 'Changed' if (access_users_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}">
                {{ 'Failed' if access_users_failed else 'Changed' if (access_users_result.results | map(attribute='changed') | select('equalto', true) | list | count > 0) else 'OK' }}
            </td>
            <td>
                {% for result in access_users_result.results %}
                {{ result.item }}<br>
                {% endfor %}
            </td>
        </tr>
        <tr>
            <td>Network Search Domains Configuration</td>
            <td>N/A</td> <!-- No specific subtask -->
            <td class="{{ 'Failed' if nmcli_failed else 'Changed' if nmcli_output.changed else 'OK' }}">
                {{ 'Failed' if nmcli_failed else 'Changed' if nmcli_output.changed else 'OK' }}
            </td>
            <td>
                {% if nmcli_failed %}
                Configuration failed.
                {% elif nmcli_output.changed %}
                <ul class="domain-list">
                    {% for domain in domain_list %}
                    <li>{{ domain }}</li>
                    {% endfor %}
                </ul>
                {% else %}
                No changes to search domains.
                {% endif %}
            </td>
        </tr>
        <tr>
            <td rowspan="2">Kernel Limit Configuration</td>
            <td>DNF</td>
            <td class="{{ 'Failed' if dnf_kernel_limit_failed else 'Changed' if dnf_kernel_limit_result.changed else 'OK' }}">
                {{ 'Failed' if dnf_kernel_limit_failed else 'Changed' if dnf_kernel_limit_result.changed else 'OK' }}
            </td>
            <td>Set to {{ kernel_limit }} in /etc/dnf/dnf.conf</td>
        </tr>
        <tr>
            <td>YUM</td>
            <td class="{{ 'Failed' if yum_kernel_limit_failed else 'Changed' if yum_kernel_limit_result.changed else 'OK' }}">
                {{ 'Failed' if yum_kernel_limit_failed else 'Changed' if yum_kernel_limit_result.changed else 'OK' }}
            </td>
            <td>Set to {{ kernel_limit }} in /etc/yum.conf</td>
        </tr>
        <tr>
            <td rowspan="{{ pam_update_results.results | length }}">Update PAM Configurations</td>
            <td>{{ pam_update_results.results[0].item }}</td>
            <td class="{{ 'Failed' if pam_update_results.results[0].failed else 'Changed' if pam_update_results.results[0].changed else 'OK' }}">
                {{ 'Failed' if pam_update_results.results[0].failed else 'Changed' if pam_update_results.results[0].changed else 'OK' }}
            </td>
            <td>
                {% if pam_update_results.results[0].failed %}
                Error: {{ pam_update_results.results[0].msg }}
                {% else %}
                Configuration updated successfully.
                {% endif %}
            </td>
        </tr>
        {% for result in pam_update_results.results[1:] %}
        <tr>
            <td>{{ result.item }}</td>
            <td class="{{ 'Failed' if result.failed else 'Changed' if result.changed else 'OK' }}">
                {{ 'Failed' if result.failed else 'Changed' if result.changed else 'OK' }}
            </td>
            <td>
                {% if result.failed %}
                Error: {{ result.msg }}
                {% else %}
                Configuration updated successfully.
                {% endif %}
            </td>
        </tr>
        {% endfor %}
       <tr>
            <td>Set Nightly Cron Job</td>
            <td>N/A</td> <!-- No specific subtask -->
            <td class="{{ 'Failed' if cron_job_failed else 'Changed' if cron_job_result.changed else 'OK' }}">
                {{ 'Failed' if cron_job_failed else 'Changed' if cron_job_result.changed else 'OK' }}
            </td>
            <td>
                {% if cron_job_failed %}
                Error setting cron job: {{ cron_command }}
                {% else %}
                Cron Job: {{ cron_command }} scheduled at 00:00 every day
                {% endif %}
            </td>
        </tr>
    </table>
    <table>
        <tr>
            <th>Device</th>
            <th>Mount Point</th>
            <th>Filesystem</th>
            <th>Size</th>
        </tr>
        {% for disk in disk_status.results if disk.stat.exists %}
        <tr>
            <td>{{ disk.item.dev }}</td>
            <td>{{ lookup('vars', 'mount_' + disk.item.dev | regex_replace('^/dev/', '')) }}</td>
            <td>ext4</td>
            <td>{{ disk_sizes.results | selectattr('item.item.dev', 'equalto', disk.item.dev) | map(attribute='stdout') | first }}</td>
        </tr>
        {% else %}
        <tr>
            <td colspan="4">No applicable devices found or all specified devices already configured.</td>
        </tr>
        {% endfor %}
    </table>
</body>
</html>
